// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package repository

import (
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type CrawlerLog struct {
	ID           string      `json:"id"`
	DataSourceID string      `json:"data_source_id"`
	JobID        pgtype.Text `json:"job_id"`
	EventType    string      `json:"event_type"`
	Message      pgtype.Text `json:"message"`
	// Stores structured log data including context, parameters, and results
	Details   []byte    `json:"details"`
	CreatedAt time.Time `json:"created_at"`
}

type DataSource struct {
	ID          string             `json:"id"`
	Name        string             `json:"name"`
	Country     string             `json:"country"`
	SourceType  string             `json:"source_type"`
	BaseUrl     pgtype.Text        `json:"base_url"`
	Description pgtype.Text        `json:"description"`
	Config      []byte             `json:"config"`
	IsActive    bool               `json:"is_active"`
	CreatedAt   time.Time          `json:"created_at"`
	UpdatedAt   time.Time          `json:"updated_at"`
	DeletedAt   pgtype.Timestamptz `json:"deleted_at"`
}

type Extraction struct {
	ID             string      `json:"id"`
	UrlFrontierID  string      `json:"url_frontier_id"`
	SiteContent    pgtype.Text `json:"site_content"`
	ArtifactLink   pgtype.Text `json:"artifact_link"`
	RawPageLink    pgtype.Text `json:"raw_page_link"`
	ExtractionDate time.Time   `json:"extraction_date"`
	ContentType    pgtype.Text `json:"content_type"`
	// Stores structured data extracted from the source
	Metadata  []byte      `json:"metadata"`
	Language  string      `json:"language"`
	PageHash  pgtype.Text `json:"page_hash"`
	Version   int32       `json:"version"`
	CreatedAt time.Time   `json:"created_at"`
	UpdatedAt time.Time   `json:"updated_at"`
}

type ExtractionVersion struct {
	ID           string      `json:"id"`
	ExtractionID string      `json:"extraction_id"`
	SiteContent  pgtype.Text `json:"site_content"`
	ArtifactLink pgtype.Text `json:"artifact_link"`
	RawPageLink  pgtype.Text `json:"raw_page_link"`
	// Stores structured data extracted from the source at this version
	Metadata  []byte      `json:"metadata"`
	PageHash  pgtype.Text `json:"page_hash"`
	Version   int32       `json:"version"`
	CreatedAt time.Time   `json:"created_at"`
}

type Job struct {
	ID         string             `json:"id"`
	Status     string             `json:"status"`
	CreatedAt  time.Time          `json:"created_at"`
	UpdatedAt  time.Time          `json:"updated_at"`
	StartedAt  pgtype.Timestamptz `json:"started_at"`
	FinishedAt pgtype.Timestamptz `json:"finished_at"`
}

type UrlFrontier struct {
	ID           string      `json:"id"`
	DataSourceID string      `json:"data_source_id"`
	Domain       string      `json:"domain"`
	Url          string      `json:"url"`
	Keyword      pgtype.Text `json:"keyword"`
	Priority     int16       `json:"priority"`
	// 0: Pending, 1: Crawled, 2: Changed, 3: Failed, 4: Scheduled, 5: Processing
	Status        int16              `json:"status"`
	Attempts      int16              `json:"attempts"`
	LastCrawledAt pgtype.Timestamptz `json:"last_crawled_at"`
	NextCrawlAt   pgtype.Timestamptz `json:"next_crawl_at"`
	ErrorMessage  pgtype.Text        `json:"error_message"`
	// Stores search parameters and context information
	Metadata  []byte    `json:"metadata"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}
